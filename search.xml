<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>win10自己能用到的常见快捷键</title>
    <url>/2020/08/07/win10%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h1 id="win10常见快捷键-表格"><a href="#win10常见快捷键-表格" class="headerlink" title="win10常见快捷键 表格"></a>win10常见快捷键 表格</h1><a id="more"></a>

<table>
<thead>
<tr>
<th>ID</th>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>win D</td>
<td>进入桌面，并且所有窗口最小化</td>
</tr>
<tr>
<td>2</td>
<td>win G</td>
<td>录屏</td>
</tr>
<tr>
<td>3</td>
<td>win H</td>
<td>语音输入</td>
</tr>
<tr>
<td>4</td>
<td>win W</td>
<td>白板（第一次使用右下角弹出白板安装按钮）</td>
</tr>
<tr>
<td>5</td>
<td>win V</td>
<td>剪贴板</td>
</tr>
<tr>
<td>6</td>
<td>win L</td>
<td>锁屏，进入PIN登录进入界面</td>
</tr>
<tr>
<td>7</td>
<td>win R</td>
<td>打开运行窗口</td>
</tr>
<tr>
<td>8</td>
<td>win tab</td>
<td>打开任务视图，其左上角可以打开新的桌面，并可以用鼠标切换</td>
</tr>
<tr>
<td>9</td>
<td>win ctrl  &lt;一  win ctrl  一&gt;</td>
<td>切换桌面</td>
</tr>
<tr>
<td>10</td>
<td>win P</td>
<td>投影</td>
</tr>
<tr>
<td>11</td>
<td>win K</td>
<td>连无线显示器，音频设备，蓝牙设备等</td>
</tr>
<tr>
<td>12</td>
<td>win + 和 win -</td>
<td>放大缩小</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Windows 10</category>
      </categories>
      <tags>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>http协议</title>
    <url>/2020/08/19/http/</url>
    <content><![CDATA[<p>http本身就是一个“http服务器 + Servlet容器”<br>Tamcat和Jetty都是Servlet引擎（Web容器），主要完成接受连接，解析请求数据，处理请求，发送响应，多线程技术提升并发性</p>
<a id="more"></a>
<h2 id="HTTP本质"><a href="#HTTP本质" class="headerlink" title="HTTP本质"></a>HTTP本质</h2><p>HTTP协议是应用层浏览器与服务器之间数据传输协议，基于TCP/IP协议传递数据，不涉及数据包传输，主要规定浏览器与服务器之间通信格式。</p>
<p>与服务器建立连接，浏览器生成请求数据发给服务器，包含（获取内容还是提取内容，想要什么内容等等）。</p>
<h2 id="请求与响应"><a href="#请求与响应" class="headerlink" title="请求与响应"></a>请求与响应</h2><p><img src="https://s1.ax1x.com/2020/08/18/dMcDaR.png" alt="image-20200818233526968"></p>
<p>http请求到达Tomcat，将http请求数据解析为Request对象，由web应用处理后得到一个Response对象，Tamcat将Response对象解析成http格式的响应数据。</p>
<h2 id="Cookie和Session"><a href="#Cookie和Session" class="headerlink" title="Cookie和Session"></a>Cookie和Session</h2><p>http协议无状态，请求与请求之间没有关系，导致web应用再刷新后原有填充数据消失。诞生Cookie，使请求与请求之间有了联系，并且web应用能够知道请求来自哪个用户。</p>
<h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><p>web应用将用户信息储存在Cookie中，用户在验证后的每次http请求都会带着Cookie。</p>
<p>Cookie本质是存储在本地的文件，包含每次请求中都需要传递的信息。</p>
<h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><p>Session可以理解为服务器开辟的空间，保存了用户的状态，比Cookie更安全。当用户http请求到来时，服务器通过Session ID把用户请求与用户的session对应起来。服务器set session生产Session ID放进http响应的响应头里，浏览器将Session ID添进Cookie。</p>
<h4 id="Session的创建与存储"><a href="#Session的创建与存储" class="headerlink" title="Session的创建与存储"></a>Session的创建与存储</h4><p>由Web容器创建，Tamcat 的 Session 管理器提供了多种持久化方案来存储 Session，通常会采用高性能的存 储方式，比如 Redis，并且通过集群部署的方式，防止单点故障，从而提升高可用。同时， Session 有过期时间，因此 Tomcat 会开启后台线程定期的轮询，如果 Session 过期了就 将 Session 失效。</p>
]]></content>
      <categories>
        <category>Tamcat</category>
      </categories>
      <tags>
        <tag>http</tag>
        <tag>Cookie</tag>
        <tag>Session</tag>
      </tags>
  </entry>
</search>
